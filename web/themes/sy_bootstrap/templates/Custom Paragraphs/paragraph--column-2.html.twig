{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
not paragraph.isPublished() ? 'paragraph--unpublished'
] 
%}
{% set tint_color = paragraph.field_para_secondary_color.value %}
{% set sy_icon = paragraph.field_para_penta_icon.value %}
{% set more_text = paragraph.field_para_more.title %}
{% set more_uri = paragraph.field_para_more.uri %}
{% set link_target = 'target="_blank"' %}
{% if 'entity:node/' in more_uri %}
	{% set more_uri = more_uri | split('/')[1] %}
	{% set more_uri = path('entity.node.canonical', {'node': more_uri}) %}
	{% set link_target = '' %}
{% elseif 'internal:' in more_uri %}
	{% set more_uri = more_uri | split(':')[1] %}
{% endif %}
{% set link_only = paragraph.field_link_only.value %}

<section {{ attributes.addClass(classes) }}>
	{% block content %}
		<div class="row {{ paragraph.field_para_fluid_container.value == "1" ? "full-width-row" }}"> 
			<div class="column-main">
				<div class="column-main--primary col-sm-12 col-md-6">
					{% if paragraph.field_para_penta_icon.value %}
                        <div>
                            <i class="sy-icon-xl--{{ paragraph.field_para_penta_icon.value }}" {% if tint_color %} style="background-color: {{ tint_color }};" {% endif %}></i>
                        </div>
                    {% endif %}
                        <h2 class="column-main--title">{{ content.field_para_title }}</h2>

                    {% if content.field_para_text %}
                        <div class="column-main--body">{{ content.field_para_text }}</div>
                    {% endif %}
					
					{% if content.field_para_more %}
                        <div>
                        	{% if more_text %}
								<a href="{{ more_uri }}" {{ link_target }} class="more-text">
				                  	{{ more_text }} <i class="sy-arrow"></i>
				                </a>
			                {% endif %}
                        </div>
                    {% endif %}
				</div>

				<div class="column-main--secondary col-sm-12 col-md-6">
					{% if content.field_para_icon_link %}
		                {% set count = paragraph.field_para_icon_link|length  %}
		                {# {% set width = 12/count %} #}
		                {% if count < 4 %}
		                    {% set width = 4 %}
		                {% else %}
		                	{% set width = 6 %}
		                {% endif %}
		                {% for key, item in content.field_para_icon_link if key|first != '#' %}
							{# {% if sy_icon %}
		                    	<div class="col-md-{{ width }} element--column__icon-{{ key + 1 }} item">{{ item }}</div>
		                    {% else %}
								<div class="col-md-12 element--column__icon-{{ key + 1 }} item">{{ item }}</div>
		                    {% endif %} #}
		                    <div class="col-md-{{ width }} element--column__icon-{{ key + 1 }} item">{{ item }}</div>
		                {% endfor %}
	            	{% endif %}
				</div>
        	</div>
		</div>
	{% endblock %}
</section>

