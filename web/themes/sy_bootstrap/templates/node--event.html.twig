{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% if view_mode == 'teaser' %}
  <div class="item">
    <a href="{{ url }}">
      {{ content.field_event_image }}
    </a>
    <div class="item-details">
      <div class="has-icons">
        <span class="day">{{ node.field_date_range.value|date("d") }}</span>
        <span class="month">{{ node.field_date_range.value|date("M") }}</span>
        <span class="year">{{ node.field_date_range.value|date("Y") }}</span>
        {% if content.field_event_category[0] %}
          <div class="categories">
            {% for item in content.field_event_category %}
              {% if item['#taxonomy_term'] %}
                {% if item['#taxonomy_term'].get('field_penta_icon').0 %}
                  <i class="sy-icons sy-icon-sm--{{ item['#taxonomy_term'].get('field_penta_icon').0.value }}"></i>   &nbsp;
                {% endif %}
                <span class="category">{{ item['#taxonomy_term'].getName()  }}</span> &nbsp;
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}
      </div>

      <h4 class="title">{{ node.title.value }}</h4>
      <div class="body">{{ content.body }}</div>
      <div class="more-link">
      <a href="{{ url }}">View Event</a>
      </div>
    </div>
  </div>

{% else %}

{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}

  {{ attach_library('sy_bootstrap/atc') }}

  {%  set addr1 = node.field_address.address_line1 %}
  {%  set addr2 = node.field_address.address_line2 %}
  {%  set locality = node.field_address.locality %}
  {%  set state = node.field_address.administrative_area %}
  {%  set zip = node.field_address.postal_code %}
  {%  set addressTogether = addr1 ~ '+' ~ addr2 ~ '+' ~ locality ~ '+' ~ state ~ '+' ~ zip %}
  {%  set atcAddress = node.title.value ~ ', ' ~ addr1 ~ ' ' ~ locality ~ ', ' ~ state ~ ' ' ~ zip %}
  {%  set addressTogether  = addressTogether|replace({' ': '+', '.': '', ',': ''}) %}
  {%  set googleMapURL = 'https://maps.google.com/?saddr=My%20Location&daddr=' ~ addressTogether %}
  {% set date = node.field_date_range.value|replace({ ('T'): ' ' }) %}
  {% set end_date = node.field_date_range.end_value|replace({ ('T'): ' ' }) %}
  {% set now = "now"|date('Y-m-dTG:i:s') %}
  {% if now > node.field_date_range.end_value %}
    {% set past = "past" %}
  {% else %}
    {% set past = "" %}
  {% endif %}

  {% set date_simple = node.field_date_range.value|date('M/d/Y') %}
  {% set end_date_simple = node.field_date_range.end_value|date('M/d/Y') %}
  {% if date_simple == end_date_simple %}
    {% set display_date = node.field_date_range.value|date('d M Y t:i A') ~ ' - ' ~ node.field_date_range.end_value|date('g:i A') %}
  {% else %}
    {% set display_date = node.field_date_range.value|date('d M Y g:i A') ~ ' - ' ~ node.field_date_range.end_value|date('d M Y g:i A') %}
  {% endif %}


<article{{ attributes.addClass(classes) }}>

  <div class="row full-width-row">
    <div class="hero">
      {{ content.field_event_image }}
      <div class="color-overlay" style="background-color: #859EB450;"></div>
      <div class="hero-info-overlay">
        <h1 class="hero-title">{{ node.title.value }}</h1>
        <row>
          <div class="col-xs-6">
            <div class="atc-wrapper">
             <div class="addtocalendar {{ past }}" data-on-button-click="AtcClose">
                <a class="atcb-link"><i class="fa fa-calendar-plus-o"></i> Add to Calendar</a>
                <a class="event-past">Event Has Passed</a>
                <var class="atc_event">
                  <var class="atc_date_start">{{ date }}</var>
                  <var class="atc_date_end">{{ end_date }}</var>
                  <var class="atc_timezone">America/New_York</var>
                  <var class="atc_title">{{ node.title.value }}</var>
                  <var class="atc_description">{{ node.body.value }}</var>
                  <var class="atc_location">{{ atcAddress }}</var>
                  <var class="atc_organizer"></var>
                  <var class="atc_organizer_email"></var>
                </var>
              </div>
            </div>
          </div>
          <div class="col-xs-6 directions-wrapper">
            <a href="{{ googleMapURL }}" class="link-directions" target="_blank"><i class="fas fa-map-marker"></i> Get Directions</a>
          </div>
        </row>
      </div>
    </div>
  </div>

  <div class="container content-center">
    <div class="row">
      <div class="col-md-12">
        <span class="date">{{ display_date }}</span>
        {% if content.field_event_category[0] %}
          <div class="categories">
          {% for item in content.field_event_category %}
            {% if item['#taxonomy_term'] %}
              {% if item['#taxonomy_term'].get('field_penta_icon').0 %}
                <i class="sy-icons sy-icon-sm--{{ item['#taxonomy_term'].get('field_penta_icon').0.value }}"></i>   &nbsp;
              {% endif %}
               <span class="category">{{ item['#taxonomy_term'].getName()  }}</span> &nbsp;
            {% endif %}
          {% endfor %}
          </div>
        {% endif %}
      </div>
    </div>
    <div class="row">
      <div class="col-md-8">
        {{ content.body }}
        <div class="items-more">
        {{ content.field_event_links }}
        </div>
      </div>
      <div class="col-md-4 content-sidebar">
          <div class="field--label">Location</div>
          {{ content.field_geofield }}
          {{ content.field_address }}
      </div>
    </div>
  </div>

    {% if content.field_related_events[0] %}

      <h3 class="related-items-header">Related Events</h3>

      <div class="row related-events sy-grid-a full-width-row">
          <div class="container">
            {% if count == 3 %}
              {% set width = 4 %}
            {% else %}
              {% set width = 6 %}
            {% endif %}
            {% for key, item in content.field_related_events if key|first != '#' %}
              <div class="col-md-{{ width }}">
                <div class="related-event element--related_event-{{ key + 1 }} item">
                  {{ item }}
                </div>
              </div>
            {% endfor %}
        </div>
      </div>

    {% endif %}

</article>

{% endif %}
